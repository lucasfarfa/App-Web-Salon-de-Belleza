{"version":3,"sources":["app.js"],"names":["pagina","cita","nombre","fecha","hora","servicios","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","mostrarResumen","nombreCita","fechaCita","desabilitarFechaAnterior","horaCita","seccionAnterior","document","querySelector","classList","remove","add","tabAnterior","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","parseInt","target","dataset","paso","async","url","resultado","fetch","json","servicio","id","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicio","onclick","seleccionarServicio","appendChild","error","console","log","elemento","tagName","parentElement","contains","eliminarServicio","agregarServicio","firstElementChild","nextElementSibling","filter","servicioObj","resumenDiv","firstChild","removeChild","Object","values","includes","noServicios","headingCita","innerHTML","serviciosCita","headingServicios","cantidad","contenedorServicio","textoServicio","totalServicio","split","trim","canitdadPagar","nombreTexto","value","length","mostrarAlerta","alerta","mensaje","tipo","setTimeout","fechaInput","dia","Date","getUTCDay","inputFecha","fechaActual","year","getFullYear","mes","getMonth","getDay","fechaDesabilitar","min","inputHora"],"mappings":"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","file":"bundle.js","sourcesContent":["let pagina = 1; // variable global. puedeo elegir con que pagina iniciar.\r\n\r\nconst cita = {\r\n    nombre: '',\r\n    fecha: '',\r\n    hora: '',\r\n    servicios: []\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() { // funcion que se encarga de llamar otras funciones\r\n    mostrarServicios();\r\n    mostrarSeccion(); // resalta el div actual segun el div que se presiona\r\n    cambiarSeccion(); // oculta o muestra una seccion segun el tab presionado\r\n    paginaSiguiente();// Paginacion siguiente y anterior\r\n    paginaAnterior();\r\n    botonesPaginador(); // comprueba la pagina actual para ocutar o mostrar la paginacion\r\n    mostrarResumen(); // Muestra el resumen de la cita o mensaje de error en caso de no pasar la validacion\r\n    nombreCita(); // almacena el nombre de la cita en el obj\r\n    fechaCita();// almacena la fecha de la cita en el objeto\r\n    desabilitarFechaAnterior();// desabilita dias anteriores al actual\r\n    horaCita(); // Almacena la hora de la cita en el obj\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n\r\n    // Eliminar mostrar-seccion anterior\r\n    const seccionAnterior = document.querySelector('.mostrar-seccion');\r\n    if (seccionAnterior) {\r\n        seccionAnterior.classList.remove('mostrar-seccion');\r\n    }\r\n\r\n    const seccionActual = document.querySelector(`#paso-${pagina}`);\r\n    seccionActual.classList.add('mostrar-seccion');\r\n\r\n    const tabAnterior = document.querySelector('.tabs .actual')\r\n    if (tabAnterior) {\r\n        tabAnterior.classList.remove('actual');\r\n    }\r\n    // Eliminar la clase de actual en el tab anterior\r\n\r\n    // Resaltar tab actual\r\n    const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n    tab.classList.add('actual');\r\n}\r\n\r\nfunction cambiarSeccion() {\r\n    const enlaces = document.querySelectorAll('.tabs button');\r\n    enlaces.forEach(enlace => {\r\n        enlace.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            pagina = parseInt(e.target.dataset.paso);\r\n\r\n            mostrarSeccion();\r\n\r\n            botonesPaginador(); // asi cambia tambien los botones si cambiamos desde tabs\r\n\r\n        })\r\n    });\r\n}\r\n\r\n\r\nasync function mostrarServicios() { // genera codigo html de servicios\r\n    // try catch, se usa cuando hay una parte critica de la aplicacion.\r\n    try { //fetch api con async await\r\n\r\n        const url = 'http://localhost:3000/AppSalon_inicio/servicios.php'; //url de servicios.php\r\n\r\n        const resultado = await fetch(url);//a fetch hay que especificarle que tipo de respuesta\r\n        const db = await resultado.json(); // le especifico a fetch que es un archivo json y guardo el archivo json enn db\r\n        \r\n        // generar html\r\n        db.forEach(servicio => {\r\n            const { id, nombre, precio } = servicio; // destructuring del array y extraigo ID, NOMBRE, PRECIO -> variables creadas con la informacion.\r\n\r\n            // ------ DOM scripting ------\r\n            // Generar nombre de servicio\r\n            const nombreServicio = document.createElement('P'); // creo un parrafo por cada SERVICIO\r\n            nombreServicio.textContent = nombre; // el nombre del servicio en html = la variable nombre de esta funcion que es extraida de la Data Base\r\n            nombreServicio.classList.add('nombre-servicio'); // le coloco una clase de CSS\r\n\r\n            // Generar precio de servicio\r\n            const precioServicio = document.createElement('P'); // practicamente mismo codigo que con nombre\r\n            precioServicio.textContent = `$ ${precio}`; // imprime $ y precio\r\n            precioServicio.classList.add('precio-servicio');\r\n\r\n            // Generar div contenedor de servicio, tipo como tarjetitas para cada servicio\r\n            const servicioDiv = document.createElement('DIV');\r\n            servicioDiv.classList.add('servicio');\r\n            servicioDiv.dataset.idServicio = id; // extraigo el id del servicio en idServicio\r\n\r\n            // Selecciona un servicio para la cita (cambiar color etc)\r\n            servicioDiv.onclick = seleccionarServicio; // al tocar el servicio, agarre el evento onclick. (event handler) -> al hacer click ejecuta funcion seleccionar servicio\r\n\r\n            // Ingresar precio y nombre al DIV del servicio\r\n            servicioDiv.appendChild(nombreServicio); // agrego el parrafo con nombre al div\r\n            servicioDiv.appendChild(precioServicio); // lo mismo pero con el precio.\r\n\r\n            // Pasar de consola a HTML\r\n            document.querySelector('#servicios').appendChild(servicioDiv); // selecciono el div del html con este id e imprimo en html el div   \r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction seleccionarServicio(e) {\r\n\r\n    let elemento;\r\n    // Forzar que el elemento al cual le damos click sea el DIV\r\n    if (e.target.tagName === 'P') { // basicamente si toco en el parrafo, forzo a javascript a que vaya al elemento padre (div) que es el que necesito para extraer el id.\r\n        elemento = e.target.parentElement; // al tocar en el p. la var elemento = al padre del p que es el div, etonces va de 10\r\n    } else {\r\n        elemento = e.target; // elemento = div\r\n    }\r\n\r\n    // agrego y saco la clase seleccionado a seleccionar servicio a conveniencia\r\n    // al hacer click quita o agrega la clase seleccionado.\r\n    if (elemento.classList.contains('seleccionado')) {\r\n        elemento.classList.remove('seleccionado');\r\n\r\n        const id = parseInt(elemento.dataset.idServicio);\r\n\r\n        eliminarServicio(id); // elimina servicio al tocarlo\r\n    } else {\r\n        elemento.classList.add('seleccionado'); // que cambie de color al seleccionar elemento\r\n\r\n        const servicioObj = {\r\n            id: parseInt(elemento.dataset.idServicio),\r\n            nombre: elemento.firstElementChild.textContent, // extrae el primer hijo del div que jusuto es el nombre\r\n            precio: elemento.firstElementChild.nextElementSibling.textContent // el siguiente elemento al primero\r\n        }\r\n\r\n        agregarServicio(servicioObj); // lo agrega al volver a tocar\r\n    }\r\n\r\n}\r\n\r\nfunction eliminarServicio(id) {\r\n    const { servicios } = cita;\r\n    cita.servicios = servicios.filter(servicio => servicio.id !== id); // que traiga todos los idd distintos\r\n\r\n    console.log(cita)\r\n\r\n}\r\n\r\nfunction agregarServicio(servicioObj) {\r\n    const { servicios } = cita;\r\n    cita.servicios = [...servicios, servicioObj]; // copiar a rray u obj en cita.servicios\r\n    console.log(cita)\r\n}\r\n\r\nfunction paginaSiguiente() {\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n    paginaSiguiente.addEventListener('click', () => {\r\n        pagina++; // cambia de pagina\r\n        botonesPaginador(); // importante sinon no funca\r\n        console.log(pagina);\r\n    })\r\n}\r\n\r\nfunction paginaAnterior() {\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n    paginaAnterior.addEventListener('click', () => {\r\n        pagina--; // cambia de pagina\r\n        botonesPaginador();\r\n        console.log(pagina);\r\n    })\r\n}\r\n\r\nfunction botonesPaginador() {\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n\r\n    if (pagina === 1) {\r\n        paginaAnterior.classList.add('ocultar');\r\n    } else if (pagina === 3) {\r\n        paginaSiguiente.classList.add('ocultar');\r\n        paginaAnterior.classList.remove('ocultar');\r\n\r\n        mostrarResumen(); // Estamos en la página 3, carga el resumen de la cita\r\n    } else {\r\n        paginaAnterior.classList.remove('ocultar');\r\n        paginaSiguiente.classList.remove('ocultar');\r\n    }\r\n\r\n    mostrarSeccion(); // Cambia la sección que se muestra por la de la página\r\n\r\n}\r\n\r\nfunction mostrarResumen() {\r\n    // Destructuring\r\n    const { nombre, fecha, hora, servicios } = cita;\r\n\r\n    // Seleccionar resumen\r\n    const resumenDiv = document.querySelector('.contenido-resumen');\r\n\r\n    // Limpia el HTML previo\r\n    while (resumenDiv.firstChild) {\r\n        resumenDiv.removeChild(resumenDiv.firstChild);\r\n    }\r\n\r\n    // Validacion de objeto\r\n    if (Object.values(cita).includes('')) { // El objeto esta vacio\r\n        const noServicios = document.createElement('P');\r\n        noServicios.textContent = 'Faltan datos de servicios, hora, fecha o nombre.'\r\n\r\n        noServicios.classList.add('invalidar-cita');\r\n\r\n        // Agregar a resumen div\r\n        resumenDiv.appendChild(noServicios); //imprime en html Faltan datos...\r\n        return;\r\n    }\r\n\r\n    const headingCita = document.createElement('H3');\r\n    headingCita.textContent = 'Resumen de cita';\r\n\r\n    // Mostrar nombreCita\r\n    const nombreCita = document.createElement('P');\r\n    nombreCita.innerHTML = `<span>Nombre:</span> ${nombre}`; // innerHTML trata la cadena de texto como coddigo HTML\r\n    // Mostrar fechaCita\r\n    const fechaCita = document.createElement('P');\r\n    fechaCita.innerHTML = `<span>Fecha:</span> ${fecha}`;\r\n    // Mostrar horaCita\r\n    const horaCita = document.createElement('P');\r\n    horaCita.innerHTML = `<span>Hora:</span> ${hora}`;\r\n\r\n    const serviciosCita = document.createElement('DIV');\r\n    serviciosCita.classList.add('resumen-servicios');\r\n\r\n    const headingServicios = document.createElement('H3');\r\n    headingServicios.textContent = 'Resumen de Servicios';\r\n\r\n    serviciosCita.appendChild(headingServicios);\r\n\r\n    let cantidad = 0; // el precio total a pagar\r\n\r\n    // Iterar sobre el array de servicios\r\n    servicios.forEach(servicio => {\r\n        \r\n        const {nombre, precio} = servicio;\r\n        const contenedorServicio = document.createElement('DIV');\r\n        contenedorServicio.classList.add('contenedor-servicio')\r\n\r\n        const textoServicio = document.createElement('P'); // nombre de servicio\r\n        textoServicio.textContent = nombre;\r\n\r\n        const precioServicio = document.createElement('P'); // nombre de servicio\r\n        precioServicio.textContent = precio;\r\n        precioServicio.classList.add('precio')\r\n\r\n        const totalServicio = precio.split('$'); // separo por $\r\n        cantidad += parseInt(totalServicio[1].trim()); // va sumando el precio total\r\n        \r\n        // Colocar texto y precio en div\r\n        contenedorServicio.appendChild(textoServicio);\r\n        contenedorServicio.appendChild(precioServicio);\r\n\r\n        serviciosCita.appendChild(contenedorServicio);\r\n\r\n    });\r\n\r\n    resumenDiv.appendChild(headingCita);\r\n    resumenDiv.appendChild(nombreCita); // imprimo en html\r\n    resumenDiv.appendChild(fechaCita); // imprimo en html\r\n    resumenDiv.appendChild(horaCita); // imprimo en html\r\n\r\n    resumenDiv.appendChild(serviciosCita);\r\n\r\n    const canitdadPagar = document.createElement('P');\r\n    canitdadPagar.classList.add('total')\r\n    canitdadPagar.innerHTML = `<span>Total a pagar: </span> $ ${cantidad}`\r\n    resumenDiv.appendChild(canitdadPagar);\r\n}\r\n\r\nfunction nombreCita() {\r\n    const nombreInput = document.querySelector('#nombre');\r\n    nombreInput.addEventListener('input', e => {\r\n        const nombreTexto = e.target.value.trim(); // que no cuente los espacios en blanco al inicio y final\r\n\r\n\r\n        // Validacion de que nombreTexto deba tener algo\r\n        if (nombreTexto === '' || nombreTexto.length < 3) { // si inseta letras\r\n            mostrarAlerta('Nombre no valido', 'error')\r\n        } else {\r\n            const alerta = document.querySelector('.alerta');\r\n            if (alerta) {\r\n                alerta.remove(); // borra la alerta una vez que se escribieron mas de 3 caracs\r\n            }\r\n            cita.nombre = nombreTexto;\r\n        }\r\n\r\n    });\r\n}\r\n\r\nfunction mostrarAlerta(mensaje, tipo) {\r\n    // Si hay alerta previa entonces no crear otra\r\n    const alertaPrevia = document.querySelector('.alerta');\r\n    if (alertaPrevia) {\r\n        return; // detiene ejecucion del codigo\r\n    }\r\n\r\n    const alerta = document.createElement('DIV');\r\n    alerta.textContent = mensaje;\r\n    alerta.classList.add('alerta');\r\n\r\n    if (tipo === 'error') {\r\n        alerta.classList.add('error');\r\n    }\r\n\r\n    // Insetar en HTML\r\n    const formulario = document.querySelector('.formulario');\r\n    formulario.appendChild(alerta); // imprime en html\r\n    console.log(alerta);\r\n\r\n    // Eliminar alerta despues de 3 seg\r\n    setTimeout(() => {\r\n        alerta.remove(); //boro ddel html\r\n\r\n    }, 3000);\r\n}\r\n\r\nfunction fechaCita() {\r\n    const fechaInput = document.querySelector('#fecha');\r\n    fechaInput.addEventListener('input', e => {\r\n\r\n        const dia = new Date(e.target.value).getUTCDay(); // retorna numero del ddia del 0 al 6 (dom a sab)\r\n        //dia.setMinutes(dia.getMinutes() + dia.getTimezoneOffset()); // para que no haya problemas por zona horaria\r\n        // const opciones = {\r\n        //     weekday: 'long',\r\n        //     year: 'numeric',\r\n        //     month: 'long'\r\n        // }\r\n\r\n        // va en array para agregar mas ddidas [0,2,3] asi\r\n        if ([1].includes(dia)) { // si se selecciona domingo (dia que no se trabaja), muestre mensaje de alerta\r\n            e.preventDefault();\r\n            fechaInput.value = ''; // resetea el valor dde la fecha si se ingrea uno incorrecto\r\n            mostrarAlerta('Los lunes no tomamos turnos', 'error'); // reutilizo la funcion ya creadadd\r\n        } else { // dia valido\r\n            cita.fecha = fechaInput.value; // agrega la fecha validada al objeto CITA.\r\n        }\r\n        console.log(dia)\r\n        //console.log(dia.toLocaleDateString('es-ES', opciones)); // convierte la fecha a le espanol\r\n    })\r\n}\r\n\r\nfunction desabilitarFechaAnterior() {\r\n    const inputFecha = document.querySelector('#fecha');\r\n\r\n    const fechaActual = new Date(); // fechaActual tiene la informacion del dia actual\r\n    // new ddate incluye sus propios metodos .getDate .getMonth etc\r\n    const year = fechaActual.getFullYear(); // traigo el anio\r\n    const mes = fechaActual.getMonth() + 1; //porque js cuenta los meses desde 0\r\n    const dia = fechaActual.getDay() + 1; // porque la idea es no reservar en el dia que se entra a la app\r\n\r\n    // Formato deseado: AAAA-MM-DD para modificar el min en HTML\r\n    const fechaDesabilitar = `${year}-${mes < 10 ? `0${mes}` : mes}-${dia < 10 ? `0${dia}` : dia}`;\r\n    // termario se llama, este codigo es porque sino en mesese y dias de dos digitos falla la logica\r\n    inputFecha.min = fechaDesabilitar; // añade al html en fecha el atributo MIN con la fecha actual\r\n}\r\n\r\nfunction horaCita() { // guardo hora y agrego hora min y hora max\r\n    const inputHora = document.querySelector('#hora');\r\n    inputHora.addEventListener('input', e => {\r\n\r\n        const horaCita = e.target.value;\r\n        const hora = horaCita.split(':'); // split divide cadena de texto. divido horas de mins\r\n        // en hora sol oetan guardad la hora\r\n        if (hora[0] < 10 || hora[0] > 18) { // si las horas son <10 o >18 no aceptaremos citas en esa franja de horarios\r\n            mostrarAlerta('Seleccione horarios entre las 10 y 18 por favor', 'error');\r\n            setTimeout(() => {\r\n                inputHora.value = ''; // reinicia cuandddo se pone mal el horario\r\n            }, 3000);\r\n\r\n        } else { // hora valida\r\n            cita.hora = horaCita; // guardo la hora completa\r\n        }\r\n    })\r\n}"]}