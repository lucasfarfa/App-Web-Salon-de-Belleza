{"version":3,"sources":["app.js"],"names":["iniciarApp","mostrarServicios","async","resultado","fetch","db","json","servicios","forEach","servicio","id","nombre","precio","nombreServicio","document","createElement","textContent","classList","add","precioServicio","servicioDiv","dataset","idServicio","onclick","seleccionarServicio","appendChild","querySelector","error","console","log","e","elemento","target","tagName","parentElement","contains","remove","addEventListener"],"mappings":"AAKA,SAAAA,aACAC,mBAGAC,eAAAD,mBAEA,IACA,MAAAE,QAAAC,MAAA,oBACAC,QAAAF,EAAAG,QAEAC,UAAAA,GAAAF,EAGAE,EAAAC,QAAAC,IACA,MAAAC,GAAAA,EAAAC,OAAAA,EAAAC,OAAAA,GAAAH,EAIAI,EAAAC,SAAAC,cAAA,KACAF,EAAAG,YAAAL,EACAE,EAAAI,UAAAC,IAAA,mBAGA,MAAAC,EAAAL,SAAAC,cAAA,KACAI,EAAAH,YAAA,KAAAJ,EACAO,EAAAF,UAAAC,IAAA,mBAGA,MAAAE,EAAAN,SAAAC,cAAA,OACAK,EAAAH,UAAAC,IAAA,YACAE,EAAAC,QAAAC,WAAAZ,EAGAU,EAAAG,QAAAC,oBAGAJ,EAAAK,YAAAZ,GACAO,EAAAK,YAAAN,GAGAL,SAAAY,cAAA,cAAAD,YAAAL,KAEA,MAAAO,GACAC,QAAAC,IAAAF,IAIA,SAAAH,oBAAAM,GAEA,IAAAC,EAGAA,EADA,MAAAD,EAAAE,OAAAC,QACAH,EAAAE,OAAAE,cAEAJ,EAAAE,OAKAD,EAAAd,UAAAkB,SAAA,gBACAJ,EAAAd,UAAAmB,OAAA,gBAEAL,EAAAd,UAAAC,IAAA,gBAlEAJ,SAAAuB,iBAAA,oBAAA,WACArC","file":"bundle.js","sourcesContent":["\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp(){ // funcion que se encarga de llamar otras funciones\r\n    mostrarServicios();\r\n}\r\n\r\nasync function mostrarServicios(){ // genera codigo html de servicios\r\n    // try catch, se usa cuando hay una parte critica de la aplicacion.\r\n    try { //fetch api con async await\r\n        const resultado = await fetch('./servicios.json');//a fetch hay que especificarle que tipo de respuesta\r\n        const db = await resultado.json(); // le especifico a fetch que es un archivo json y guardo el archivo json enn db\r\n\r\n        const {servicios} = db // de db extraigo servicios(archivo) y lo guardo en archivo var {destructuring}\r\n\r\n        // generar html\r\n        servicios.forEach( servicio => {\r\n            const {id, nombre, precio} = servicio; // destructuring del array y extraigo ID, NOMBRE, PRECIO -> variables creadas con la informacion.\r\n\r\n            // ------ DOM scripting ------\r\n            // Generar nombre de servicio\r\n            const nombreServicio = document.createElement ('P'); // creo un parrafo por cada SERVICIO\r\n            nombreServicio.textContent = nombre; // el nombre del servicio en html = la variable nombre de esta funcion que es extraida de la Data Base\r\n            nombreServicio.classList.add('nombre-servicio'); // le coloco una clase de CSS\r\n\r\n            // Generar precio de servicio\r\n            const precioServicio = document.createElement('P'); // practicamente mismo codigo que con nombre\r\n            precioServicio.textContent = `$ ${precio}`; // imprime $ y precio\r\n            precioServicio.classList.add('precio-servicio');\r\n\r\n            // Generar div contenedor de servicio, tipo como tarjetitas para cada servicio\r\n            const servicioDiv = document.createElement('DIV');\r\n            servicioDiv.classList.add('servicio');\r\n            servicioDiv.dataset.idServicio = id; // extraigo el id del servicio en idServicio\r\n\r\n            // Selecciona un servicio para la cita (cambiar color etc)\r\n            servicioDiv.onclick = seleccionarServicio; // al tocar el servicio, agarre el evento onclick. (event handler) -> al hacer click ejecuta funcion seleccionar servicio\r\n            \r\n            // Ingresar precio y nombre al DIV del servicio\r\n            servicioDiv.appendChild(nombreServicio); // agrego el parrafo con nombre al div\r\n            servicioDiv.appendChild(precioServicio); // lo mismo pero con el precio.\r\n\r\n            // Pasar de consola a HTML\r\n            document.querySelector('#servicios').appendChild(servicioDiv); // selecciono el div del html con este id e imprimo en html el div   \r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction seleccionarServicio(e) {\r\n\r\n    let elemento;\r\n    // Forzar que el elemento al cual le damos click sea el DIV\r\n    if (e.target.tagName === 'P') { // basicamente si toco en el parrafo, forzo a javascript a que vaya al elemento padre (div) que es el que necesito para extraer el id.\r\n        elemento = e.target.parentElement; // al tocar en el p. la var elemento = al padre del p que es el div, etonces va de 10\r\n    } else {\r\n        elemento = e.target; // elemento = div\r\n    }\r\n    \r\n    // agrego y saco la clase seleccionado a seleccionar servicio a conveniencia\r\n    // al hacer click quita o agrega la clase seleccionado.\r\n    if(elemento.classList.contains('seleccionado')){\r\n        elemento.classList.remove('seleccionado');\r\n    } else {\r\n         elemento.classList.add('seleccionado'); // que cambie de color al seleccionar elemento\r\n    }\r\n   \r\n}"]}