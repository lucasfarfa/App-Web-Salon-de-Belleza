{"version":3,"sources":["app.js"],"names":["pagina","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","document","querySelector","classList","add","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","parseInt","target","dataset","paso","remove","async","resultado","fetch","db","json","servicios","servicio","id","nombre","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicio","onclick","seleccionarServicio","appendChild","error","console","log","elemento","tagName","parentElement","contains"],"mappings":"AAAA,IAAAA,OAAA,EAOA,SAAAC,aACAC,mBACAC,iBACAC,iBACAC,kBACAC,iBAGA,SAAAH,iBACAI,SAAAC,cAAA,SAAAR,QACAS,UAAAC,IAAA,mBAGAH,SAAAC,cAAA,eAAAR,YACAS,UAAAC,IAAA,UAGA,SAAAN,iBACAG,SAAAI,iBAAA,gBACAC,QAAAC,IACAA,EAAAC,iBAAA,QAAAC,IACAA,EAAAC,iBACAhB,OAAAiB,SAAAF,EAAAG,OAAAC,QAAAC,MAGAb,SAAAC,cAAA,oBAAAC,UAAAY,OAAA,mBAIAd,SAAAC,cAAA,SAAAR,QACAS,UAAAC,IAAA,mBAGAH,SAAAC,cAAA,iBAAAC,UAAAY,OAAA,UAEAd,SAAAC,cAAA,eAAAR,YACAS,UAAAC,IAAA,cAMAY,eAAApB,mBAEA,IACA,MAAAqB,QAAAC,MAAA,oBACAC,QAAAF,EAAAG,QAEAC,UAAAA,GAAAF,EAGAE,EAAAf,QAAAgB,IACA,MAAAC,GAAAA,EAAAC,OAAAA,EAAAC,OAAAA,GAAAH,EAIAI,EAAAzB,SAAA0B,cAAA,KACAD,EAAAE,YAAAJ,EACAE,EAAAvB,UAAAC,IAAA,mBAGA,MAAAyB,EAAA5B,SAAA0B,cAAA,KACAE,EAAAD,YAAA,KAAAH,EACAI,EAAA1B,UAAAC,IAAA,mBAGA,MAAA0B,EAAA7B,SAAA0B,cAAA,OACAG,EAAA3B,UAAAC,IAAA,YACA0B,EAAAjB,QAAAkB,WAAAR,EAGAO,EAAAE,QAAAC,oBAGAH,EAAAI,YAAAR,GACAI,EAAAI,YAAAL,GAGA5B,SAAAC,cAAA,cAAAgC,YAAAJ,KAEA,MAAAK,GACAC,QAAAC,IAAAF,IAIA,SAAAF,oBAAAxB,GAEA,IAAA6B,EAGAA,EADA,MAAA7B,EAAAG,OAAA2B,QACA9B,EAAAG,OAAA4B,cAEA/B,EAAAG,OAKA0B,EAAAnC,UAAAsC,SAAA,gBACAH,EAAAnC,UAAAY,OAAA,gBAEAuB,EAAAnC,UAAAC,IAAA,gBAKA,SAAAL,kBACAE,SAAAC,cAAA,cACAM,iBAAA,QAAA,KACAd,SACA0C,QAAAC,IAAA3C,UAIA,SAAAM,iBACAC,SAAAC,cAAA,aACAM,iBAAA,QAAA,KACAd,SACA0C,QAAAC,IAAA3C,UAzHAO,SAAAO,iBAAA,oBAAA,WACAb","file":"bundle.js","sourcesContent":["let pagina = 1; // variable global. puedeo elegir con que pagina iniciar.\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() { // funcion que se encarga de llamar otras funciones\r\n    mostrarServicios();\r\n    mostrarSeccion(); // resalta el div actual segun el div que se presiona\r\n    cambiarSeccion(); // oculta o muestra una seccion segun el tab presionado\r\n    paginaSiguiente();// Paginacion siguiente y anterior\r\n    paginaAnterior();\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n    const seccionActual = document.querySelector(`#paso-${pagina}`);\r\n    seccionActual.classList.add('mostrar-seccion');\r\n\r\n    // Resaltar tab actual\r\n    const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n    tab.classList.add('actual');\r\n}\r\n\r\nfunction cambiarSeccion() {\r\n    const enlaces = document.querySelectorAll('.tabs button');\r\n    enlaces.forEach(enlace => {\r\n        enlace.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            pagina = parseInt(e.target.dataset.paso);\r\n\r\n            // Eliminar mostrar-seccion anterior\r\n            document.querySelector('.mostrar-seccion').classList.remove('mostrar-seccion');\r\n\r\n            // Agrega mostrar-seccion dodne dimos click\r\n\r\n            const seccion = document.querySelector(`#paso-${pagina}`);\r\n            seccion.classList.add('mostrar-seccion');\r\n\r\n            // Eliminar la clase de actual en el tab anterior\r\n            document.querySelector('.tabs .actual').classList.remove('actual');\r\n            // Agregar clase actual en el nuevo tab\r\n            const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n            tab.classList.add('actual');\r\n        })\r\n    });\r\n}\r\n\r\n\r\nasync function mostrarServicios() { // genera codigo html de servicios\r\n    // try catch, se usa cuando hay una parte critica de la aplicacion.\r\n    try { //fetch api con async await\r\n        const resultado = await fetch('./servicios.json');//a fetch hay que especificarle que tipo de respuesta\r\n        const db = await resultado.json(); // le especifico a fetch que es un archivo json y guardo el archivo json enn db\r\n\r\n        const { servicios } = db // de db extraigo servicios(archivo) y lo guardo en archivo var {destructuring}\r\n\r\n        // generar html\r\n        servicios.forEach(servicio => {\r\n            const { id, nombre, precio } = servicio; // destructuring del array y extraigo ID, NOMBRE, PRECIO -> variables creadas con la informacion.\r\n\r\n            // ------ DOM scripting ------\r\n            // Generar nombre de servicio\r\n            const nombreServicio = document.createElement('P'); // creo un parrafo por cada SERVICIO\r\n            nombreServicio.textContent = nombre; // el nombre del servicio en html = la variable nombre de esta funcion que es extraida de la Data Base\r\n            nombreServicio.classList.add('nombre-servicio'); // le coloco una clase de CSS\r\n\r\n            // Generar precio de servicio\r\n            const precioServicio = document.createElement('P'); // practicamente mismo codigo que con nombre\r\n            precioServicio.textContent = `$ ${precio}`; // imprime $ y precio\r\n            precioServicio.classList.add('precio-servicio');\r\n\r\n            // Generar div contenedor de servicio, tipo como tarjetitas para cada servicio\r\n            const servicioDiv = document.createElement('DIV');\r\n            servicioDiv.classList.add('servicio');\r\n            servicioDiv.dataset.idServicio = id; // extraigo el id del servicio en idServicio\r\n\r\n            // Selecciona un servicio para la cita (cambiar color etc)\r\n            servicioDiv.onclick = seleccionarServicio; // al tocar el servicio, agarre el evento onclick. (event handler) -> al hacer click ejecuta funcion seleccionar servicio\r\n\r\n            // Ingresar precio y nombre al DIV del servicio\r\n            servicioDiv.appendChild(nombreServicio); // agrego el parrafo con nombre al div\r\n            servicioDiv.appendChild(precioServicio); // lo mismo pero con el precio.\r\n\r\n            // Pasar de consola a HTML\r\n            document.querySelector('#servicios').appendChild(servicioDiv); // selecciono el div del html con este id e imprimo en html el div   \r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction seleccionarServicio(e) {\r\n\r\n    let elemento;\r\n    // Forzar que el elemento al cual le damos click sea el DIV\r\n    if (e.target.tagName === 'P') { // basicamente si toco en el parrafo, forzo a javascript a que vaya al elemento padre (div) que es el que necesito para extraer el id.\r\n        elemento = e.target.parentElement; // al tocar en el p. la var elemento = al padre del p que es el div, etonces va de 10\r\n    } else {\r\n        elemento = e.target; // elemento = div\r\n    }\r\n\r\n    // agrego y saco la clase seleccionado a seleccionar servicio a conveniencia\r\n    // al hacer click quita o agrega la clase seleccionado.\r\n    if (elemento.classList.contains('seleccionado')) {\r\n        elemento.classList.remove('seleccionado');\r\n    } else {\r\n        elemento.classList.add('seleccionado'); // que cambie de color al seleccionar elemento\r\n    }\r\n\r\n}\r\n\r\nfunction paginaSiguiente(){\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n    paginaSiguiente.addEventListener('click', ()=> {\r\n        pagina++; // cambia de pagina\r\n        console.log(pagina);\r\n    })\r\n}\r\n\r\nfunction paginaAnterior(){\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n    paginaAnterior.addEventListener('click', ()=> {\r\n        pagina--; // cambia de pagina\r\n        console.log(pagina);\r\n    })\r\n}"]}